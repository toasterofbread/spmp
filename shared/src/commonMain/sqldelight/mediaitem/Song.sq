CREATE TABLE Song (
    id TEXT NOT NULL PRIMARY KEY,

    song_type INTEGER,
    duration INTEGER,
    artist TEXT,
    album TEXT,
    related_browse_id TEXT,

    --

    liked INTEGER, -- null = Unknown, 0 = Disliked, 1 = Neutral, 2 = Liked
    lyrics_source INTEGER,
    lyrics_id TEXT,
    lyrics_sync_offset INTEGER,
    np_gradient_depth REAL,
    thumbnail_rounding INTEGER,
    notif_image_offset_x INTEGER,
    notif_image_offset_y INTEGER,

    FOREIGN KEY (artist) REFERENCES Artist(id),
    FOREIGN KEY (album) REFERENCES Playlist(id),

--  TODO
--  FOREIGN KEY (lyrics_source, lyrics_id) REFERENCES Lyrics(source, id),

    FOREIGN KEY (id) REFERENCES MediaItem(id)
);

byId: SELECT * FROM Song WHERE id == :id;
insertById {
    INSERT OR IGNORE INTO MediaItem(id) VALUES(:id);
    INSERT OR IGNORE INTO Song(id) VALUES(:id);
}

songTypeById: SELECT song_type FROM Song WHERE id == :id;
updateSongTypeById: UPDATE Song SET song_type = :value WHERE id == :id;

durationById: SELECT duration FROM Song WHERE id == :id;
updateDurationById: UPDATE Song SET duration = :value WHERE id == :id;

artistById: SELECT artist FROM Song WHERE id == :id;
updateArtistById: UPDATE Song SET artist = :value WHERE id == :id;

albumById: SELECT album FROM Song WHERE id == :id;
updateAlbumById: UPDATE Song SET album = :value WHERE id == :id;

relatedBrowseIdById: SELECT related_browse_id FROM Song WHERE id == :id;
updateRelatedBrowseIdById: UPDATE Song SET related_browse_id = :related_browse_id WHERE id == :id;

--

likedById: SELECT liked FROM Song WHERE id == :id;
updatelikedById: UPDATE Song SET liked = :liked WHERE id == :id;

lyricsById: SELECT lyrics_source, lyrics_id FROM Song WHERE id == :id;
updateLyricsById: UPDATE Song SET lyrics_source = :lyrics_source, lyrics_id = :lyrics_id WHERE id == :id;

lyricsSyncOffsetById: SELECT lyrics_sync_offset FROM Song WHERE id == :id;
updateLyricsSyncOffsetById: UPDATE Song SET lyrics_sync_offset = :lyrics_sync_offset WHERE id == :id;

npGradientDepthById: SELECT np_gradient_depth FROM Song WHERE id == :id;
updateNpGradientDepthById: UPDATE Song SET np_gradient_depth = :np_gradient_depth WHERE id == :id;

thumbnailRoundingById: SELECT thumbnail_rounding FROM Song WHERE id == :id;
updateThumbnailRoundingById: UPDATE Song SET thumbnail_rounding = :thumbnail_rounding WHERE id == :id;

notifImageOffsetById: SELECT notif_image_offset_x, notif_image_offset_y FROM Song WHERE id == :id;
updateNotifImageOffsetById: UPDATE Song SET notif_image_offset_x = :notif_image_offset_x, notif_image_offset_y = :notif_image_offset_y WHERE id == :id;
